数据类型的本质：

数据类型和内存的关系：

数据类型可以理解为创建变量的模具：是固定内存大小的别名，

数据类型的作用：编译器预算对象（变量）分配内存空间的大小。

形参中的数组，编译器把它当作指针处理，C语言特色

//*放在左边，给内存赋值，写内存
*p = 22;

//*放在右边，给内存的值，读内存
b = *p;

变量的本质

一段连续内存空间的别名


void 无类型
1 .函数参数为空。定义参数，可以用void修饰： int fun(void)
2 .函数没有返回值 void fun(void)
3 .不能定义void类型的普通变量 void a //error,无法确定类型，不同类型分配空间不一样
4 .可以定义void *变量 void *p //ok 32位程序4字节  64位程序 8字节
5 .数据类型本质，固定内存块的别名
6 .void *p 万能指针，函数返回值，函数参数

//文件目录
在读取文件时,路径的写法有如下方式

1、文件在当前目录（以图像文件为例，当前项目文件为中心）

 "./1.jpg" 或 "1.jpg"
2、文件在上层目录 
（1）在上层目录下

    "../1.jpg"
（2）在上层目录下的一个Image文件夹下

  "../Image/1.jpg"
（3）在上上层目录下

  "../../1.jpg"
3、文件在下一层目录(Image1文件夹)

   "./Image1/1.jpg"
4、根目录表示法,任何页面访问Image下的Image.jpg图片

   "C:/Image/1.jpg"
 2.2 extern 变量
如果文件b.c需要引用a.c中变量int v，就可以在b.c中声明extern int v，然后就可以引用变量v。能够被其他模块以extern修饰符引用到的变量通常是全局变量。注意，extern int v可以放在a.c中的任何地方，具体作用范围和局部变量相同。

extern的原理很简单，就是告诉编译器：“你现在编译的文件中，有一个标识符虽然没有在本文件中定义，但是它是在别的文件中定义的全局变量，你要放行！”
